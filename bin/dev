#!/bin/bash

start() {
  docker compose up server "$@"
}

stop() {
  docker compose down
}

setup_llama_cpp() {
  arch=$(uname -m)

  if [ "$arch" == 'x86_64'  ]
    then
      echo "This is 64 bit"
      CMAKE_ARGS="-DLLAMA_CUBLAS=on" poetry run pip install llama-cpp-python --force-reinstall --upgrade --no-cache-dir
  
  elif [ "$arch" == 'arm64' ]
   then
      echo "This is Mac arm64"
      CMAKE_ARGS="-DLLAMA_METAL=on" poetry run pip install llama-cpp-python --force-reinstall --upgrade --no-cache-dir
  fi
}

local_server() {
  docker compose up milvus-db mongo redis -d
  cd server
  poetry run uvicorn app.main:init_app --host 0.0.0.0 \
     --port 8000 --reload --factory --no-access-log 
}

lint_frontend() {
  docker compose run --rm frontend yarn lint
} 

format_frontend() {
    docker compose run --rm frontend yarn format
}

lint_backend() {
  docker compose run --rm backend black app --check
} 

format_backend() {
    docker compose run --rm backend black app
}

dump() {
  docker compose down --volumes
}

populate () {
  docker compose run --rm server poetry run python development/populate.py
}

shell() {
  if [[ "$1" = "mongo" ]]; then
    docker compose exec -it mongo mongosh -u mongod -p Password123!
  else
    docker compose exec -it "$1" /bin/sh
  fi
}

if [[ $# -eq 0 ]]; then
  start "$@"
else
  CMD=$1
  shift
  $CMD "$@"
fi
